buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

//apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'idea'


repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    implementation 'no.tornado:tornadofx:1.7.17'

    //implementation 'com.beust:klaxon:3.0.1'

    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: jackson_version
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jackson_version
    implementation group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: jackson_version

    implementation 'khttp:khttp:0.1.0'

    // https://mvnrepository.com/artifact/org.controlsfx/controlsfx
    api group: 'org.controlsfx', name: 'controlsfx', version: '8.40.14'

    implementation 'net.sf.bluecove:bluecove:2.1.0'

    // https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc
    implementation group: 'org.xerial', name: 'sqlite-jdbc', version: '3.25.2'

    // https://mvnrepository.com/artifact/log4j/log4j
    implementation group: 'log4j', name: 'log4j', version: '1.2.17'

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-log4j12
    implementation group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.25'

    implementation project(path: ':common')

    testImplementation group: 'junit', name: 'junit', version: '4.12'
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

test {
    Properties properties = new Properties()
    properties.load(new File(project.rootDir, "local.properties").newDataInputStream())
    systemProperties(properties)
}

task run(type: JavaExec, dependsOn: build) {
    main = "com.ironpanthers.scouting.desktop.ScoutingSystemApplicationKt"
}
